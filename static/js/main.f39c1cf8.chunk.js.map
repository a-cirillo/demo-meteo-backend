{"version":3,"sources":["components/custom-url-field/custom-url-field.component.jsx","page/webcams/webcams.component.jsx","components/custom-button/custom-button.component.jsx","page/webcam-reports/webcam-reports.component.jsx","page/housekeeping/housekeeping.component.jsx","provider/auth-provider/auth-provider.component.jsx","provider/data-provider/data-provider.component.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomUrlField","record","source","href","className","target","WebcamTitle","name","WebcamFilter","props","Filter","TextInput","label","alwaysOn","WebcamList","isSmall","useMediaQuery","theme","breakpoints","down","List","filters","exporter","SimpleList","primaryText","wid","secondaryText","Datagrid","TextField","ChipField","ImageField","title","EditButton","WebcamEdit","Edit","SimpleForm","redirect","multiline","WebcamCreate","Create","CustomButton","class","tabindex","role","aria-disabled","aria-label","focusable","viewBox","aria-hidden","d","WebcamReportsFilter","WebcamReportsList","id","url_webcam","useStyles","makeStyles","style","color","backgroundColor","StatusField","classes","HousekeepingTitle","HousekeepingFilter","HousekeepingList","HousekeepingEdit","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions","apiUrl","isEmpty","obj","key","hasOwnProperty","webcamFakeData","lid","description","url","image","webcamReportFakeData","url_site","locality","email","httpClient","fetchUtils","fetchJson","getList","resource","params","console","log","filter","pagination","page","perPage","sort","field","order","query","JSON","stringify","range","then","headers","data","json","total","current_object","filter_name","filter_lid","filter_source","undefined","items","toLowerCase","indexOf","parseInt","length","filter_status","filter_uw","filter_us","filter_locality","filter_email","create","includes","getOne","MyLoginPage","Login","backgroundImage","App","Admin","loginPage","authProvider","dataProvider","Resource","icon","WebcamIcon","list","edit","HousekeepingIcon","options","WebcamReportsIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f39c1cf8.chunk.js","sourcesContent":["import React from 'react';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport './custom-url-field.styels.scss'\n\nconst CustomUrlField = ({ record = {}, source }) =>\n    <a href={record[source]} className=\"link\" target=\"_blank\">\n        {record[source]}\n        <LaunchIcon className='icon' />\n    </a>;\n\nexport default CustomUrlField;","import React from 'react';\n// import { List, Datagrid, TextField, ReferenceField } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport {\n    Filter,\n    List,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    SimpleForm,\n    ReferenceInput,\n    TextInput,\n    SelectInput,\n    Create,\n    SimpleList,\n    ImageField,\n    ChipField\n} from 'react-admin';\n\nimport CustomUrlField from '../../components/custom-url-field/custom-url-field.component';\n\nconst WebcamTitle = ({ record }) => {\n return <span>Post {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nconst WebcamFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Name\" source=\"name\" alwaysOn />\n        <TextInput label=\"LID\" source=\"lid\" />\n        <TextInput label=\"Source\" source=\"source\" />\n    </Filter>\n);\n\nexport const WebcamList = props => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return(\n        <List filters={<WebcamFilter/>} exporter={false} {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.wid}\n                    secondaryText={record => `${record.name}`}\n                />\n            ) : (\n                <Datagrid>\n                    <TextField label=\"WID\" source=\"id\"/>\n                    <TextField label=\"LID\" source=\"lid\" />\n                    <TextField source=\"name\" />\n                    <TextField source=\"description\" />\n                    <CustomUrlField label=\"URL\" source=\"url\" />\n                    <ChipField source=\"source\" />\n                    <ImageField label=\"Preview\" source=\"image\" title=\"webcam\" />\n                    <EditButton />\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\nexport const WebcamEdit = props => (\n    <Edit title={<WebcamTitle />} {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput label=\"LID\" source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput multiline source=\"description\" />\n            <TextInput label=\"URL\" source=\"url\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const WebcamCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput label=\"LID\" source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput multiline source=\"description\" />\n            <TextInput label=\"URL\" source=\"url\" />\n        </SimpleForm>\n    </Create>\n);\n\n/*\nredirect={\"/webcams\"}*/\n","import React from 'react';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport './custom-button.styels.scss'\n\nconst CustomButton = () =>\n    <a class=\"MuiButtonBase-root MuiButton-root MuiButton-text RaButton-button-265 MuiButton-textPrimary MuiButton-textSizeSmall MuiButton-sizeSmall\" tabindex=\"0\" role=\"button\" aria-disabled=\"false\" aria-label=\"Create\" href=\"#/webcams/create\"><span class=\"MuiButton-label\"><svg class=\"MuiSvgIcon-root RaButton-smallIcon-268\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path></svg><span class=\"RaButton-label-266\">Add as webcam</span></span><span class=\"MuiTouchRipple-root\"></span></a>\nexport default CustomButton;","import React from 'react';\n// import { List, Datagrid, TextField, ReferenceField } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport {\n    Filter,\n    List,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    SimpleForm,\n    ReferenceInput,\n    TextInput,\n    SelectInput,\n    Create,\n    SimpleList,\n    ImageField\n} from 'react-admin';\n\nimport CustomUrlField from '../../components/custom-url-field/custom-url-field.component';\nimport CustomButton from '../../components/custom-button/custom-button.component';\n\nconst WebcamReportsTitle = ({ record }) => {\n return <span>Record {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nconst WebcamReportsFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"LID\" source=\"lid\" />\n        <TextInput label=\"Location\" source=\"locality\" />\n        <TextInput label=\"Reporter email\" source=\"email\" />\n    </Filter>\n);\n\nexport const WebcamReportsList = props => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return(\n        <List filters={<WebcamReportsFilter/>} exporter={false} {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.id}\n                    secondaryText={record => `${record.url_webcam}`}\n                />\n            ) : (\n                <Datagrid>\n                    <TextField label=\"RID\" source=\"id\"/>\n                    <TextField label=\"LID\" source=\"lid\" />\n                    <TextField label=\"Location\" source=\"locality\" />\n                    <TextField label=\"Reporter email\" source=\"email\" />\n                    <CustomUrlField label=\"Webcam URL\" source=\"url_webcam\" />\n                    <CustomUrlField label=\"Source website\" source=\"url_site\" />\n                    <CustomButton />\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\nexport const WebcamReportsEdit = props => (\n    <Edit title={<WebcamReportsTitle />} {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput source=\"url\" />\n            <TextInput source=\"image\" />\n            <TextInput source=\"source\" />\n            <TextInput source=\"status\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const WebcamReportsCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput multiline source=\"description\" />\n            <TextInput source=\"url\" />\n            <TextInput source=\"image\" />\n            <TextInput source=\"source\" />\n            <TextInput source=\"status\" />\n        </SimpleForm>\n    </Create>\n);\n\n/*\nredirect={\"/webcams\"}*/\n","import React from 'react';\n// import { List, Datagrid, TextField, ReferenceField } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport {\n    Filter,\n    List,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    SimpleForm,\n    ReferenceInput,\n    TextInput,\n    SelectInput,\n    Create,\n    SimpleList,\n    ImageField,\n    ChipField\n} from 'react-admin';\n\nimport CustomUrlField from '../../components/custom-url-field/custom-url-field.component';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    style: {\n        color: 'purple',\n        backgroundColor: 'red'\n    },\n});\n\nconst StatusField = props => {\n    const classes = useStyles();\n    return <ChipField className={classes.style} {...props} />;\n};\n\nconst HousekeepingTitle = ({ record }) => {\n return <span>Post {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nconst HousekeepingFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Name\" source=\"name\" alwaysOn />\n        <TextInput label=\"LID\" source=\"lid\" />\n        <TextInput label=\"Source\" source=\"source\" />\n        <TextInput label=\"Status\" source=\"status\" />\n    </Filter>\n);\n\nexport const HousekeepingList = props => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return(\n        <List filters={<HousekeepingFilter/>} exporter={false} {...props}>\n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.wid}\n                    secondaryText={record => `${record.name}`}\n                />\n            ) : (\n                <Datagrid>\n                    <TextField label=\"WID\" source=\"id\"/>\n                    <TextField label=\"LID\" source=\"lid\" />\n                    <StatusField source=\"status\"/>\n                    <TextField source=\"name\" />\n                    <CustomUrlField label=\"URL\" source=\"url\" />\n                    <TextField source=\"source\" />\n                    <ImageField label=\"Preview\" source=\"image\" title=\"title\" />\n                    <EditButton />\n                </Datagrid>\n            )}\n        </List>\n    )\n};\n\nexport const HousekeepingEdit = props => (\n    <Edit title={<HousekeepingTitle />} {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput label=\"URL\" source=\"url\" />\n            <TextInput source=\"image\" />\n            <TextInput source=\"source\" />\n            <TextInput source=\"status\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const HousekeepingCreate = props => (\n    <Create {...props}>\n        <SimpleForm redirect={\"/webcams\"}>\n            <TextInput source=\"lid\" />\n            <TextInput source=\"name\" />\n            <TextInput multiline source=\"description\" />\n            <TextInput label=\"URL\" source=\"url\" />\n            <TextInput source=\"image\" />\n            <TextInput source=\"source\" />\n            <TextInput source=\"status\" />\n        </SimpleForm>\n    </Create>\n);\n\n/*\nredirect={\"/webcams\"}*/\n","export default {\n    // called when the user attempts to log in\n    login: ({ username }) => {\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    },\n    // called when the user clicks on the logout button\n    logout: () => {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    // called when the user navigates to a new location, to check for authentication\n    checkAuth: () => {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    },\n    // called when the user navigates to a new location, to check for permissions / roles\n    getPermissions: () => Promise.resolve(),\n};","import { fetchUtils} from 'react-admin';\nimport { stringify } from 'query-string';\n\n\n\n\nconst apiUrl = 'https://www.mocky.io/v2/5ecf77c93200004700e3d20a';\n\n// const httpClient = (url, options = {}) => {\n//     // if (!options.headers) {\n//     //     options.headers = new Headers({ Accept: 'application/json' });\n//     // }\n//     // // add your own headers here\n//     options.headers = new Headers({'Access-Control-Allow-Origin': '*'});\n//     // options.mode = 'no-cors';\n//     return fetchUtils.fetchJson(url, options);\n// };\n\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nconst webcamFakeData = [\n    {\n        id: 23,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Vista panoramica. Sullo sfondo la Basilica di S.Pietro.\",\n        url: \"http://www.barcello.it/images/meteo/axis.jpg\",\n        image: 'http://www.barcello.it/images/meteo/axis.jpg',\n        source: 'Manual',\n        status: 'HTTP Error: 500'\n    },\n    {\n        id: 666,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Roma Parioli\",\n        url: \"http://www.webcam-meteo-roma.it/webcam/current.jpg\",\n        image: \"http://www.webcam-meteo-roma.it/webcam/current.jpg\",\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 1305,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Roma Spinaceto. Vista nord\",\n        url: \"http://meteo.viamar.org/jpgwebcam.jpg\",\n        image: 'http://meteo.viamar.org/jpgwebcam.jpg',\n        source: 'Feratel',\n        status: 'Content is not image'\n    },\n    {\n        id: 1530,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Stazione meteo Centocelle\",\n        url: \"http://www.meteocentocelle.it/weather/video.jpg\",\n        image: 'http://www.meteocentocelle.it/weather/video.jpg',\n        source: 'Manual',\n        status: 'HTTP Error: 500'\n    },\n    {\n        id: 2033,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Roma Spinaceto: Panoramica verso ovest, direzione aeroporto di Fiumicino\",\n        url: \"http://www.meteospinaceto.it/_altervista_ht/webcam.php\",\n        image: 'http://www.meteospinaceto.it/_altervista_ht/webcam.php',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 20576,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Valle Muricana (Roma nord) - Vista Sud\",\n        url: \"http://www.vallemuricana.it/webcam.php\",\n        image: 'http://www.vallemuricana.it/webcam.php',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 2577,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Valle Muricana (Roma nord) - Vista Ovest\",\n        url: \"http://www.vallemuricana.it/webcam1.php\",\n        image: 'http://www.vallemuricana.it/webcam1.php',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 3418,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Zona Centocelle\",\n        url: \"http://www.meteocentocelle.it/weather/video.jpg\",\n        image: 'http://www.meteocentocelle.it/weather/video.jpg',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 3981,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Vista panoramica\",\n        url: \"http://meteo.viamar.org/jpgwebcam.jpg\",\n        image: 'http://meteo.viamar.org/jpgwebcam.jpg',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n    {\n        id: 4598,\n        lid: 5913,\n        name: \"Roma (RM)\",\n        description: \"Piazza Navona\",\n        url: \"http://media06.whatsupcams.com/snaps/it_roma02/it_roma02.png\",\n        image: 'http://media06.whatsupcams.com/snaps/it_roma02/it_roma02.png',\n        source: 'User reported',\n        status: 'HTTP Error: 400'\n    },\n];\n\nconst webcamReportFakeData = [\n    {\n        id: 126,\n        lid: 54,\n        url_webcam: 'http://www.webcam-meteo-roma.it/webcam/current.jpg',\n        url_site: 'http://www.webcam-meteo-roma.it/webcam/current.jpg',\n        description: \"Lorem ipsum dolor sit amet. Qui illo aliquid et aliquid numquam aut voluptates sequi hic corrupti voluptate vel quidem numquam qui eligendi molestiae? Qui illum eligendi 33 deserunt sint non exercitationem voluptatem eum autem quia eos officiis adipisci.\",\n        locality: \"Rome\",\n        email: 'a.cirillo@bitdrome.com'\n    },\n    {\n        id: 127,\n        lid: 37,\n        url_webcam: 'http://meteo.viamar.org/jpgwebcam.jpg',\n        url_site: 'http://meteo.viamar.org/jpgwebcam.jpg',\n        description: \"Lorem ipsum dolor sit amet. Qui illo aliquid et aliquid numquam aut voluptates sequi hic corrupti voluptate vel quidem numquam qui eligendi molestiae? Qui illum eligendi 33 deserunt sint non exercitationem voluptatem eum autem quia eos officiis adipisci.\",\n        locality: \"Naples\",\n        email: 'l.ciuccio@bitdrome.com'\n    },\n    {\n        id: 130,\n        lid: 3,\n        url_webcam: 'http://www.meteocentocelle.it/weather/video.jpg',\n        url_site: 'http://www.meteocentocelle.it/weather/video.jpg',\n        description: \"Lorem ipsum dolor sit amet. Qui illo aliquid et aliquid numquam aut voluptates sequi hic corrupti voluptate vel quidem numquam qui eligendi molestiae? Qui illum eligendi 33 deserunt sint non exercitationem voluptatem eum autem quia eos officiis adipisci.\",\n        locality: \"Milan\",\n        email: 's.iodice@bitdrome.com'\n    }\n];\n\n\nconst httpClient = fetchUtils.fetchJson;\n\n\nexport default {\n    getList: (resource, params) => {\n        console.log(resource);\n        console.log(params.filter);\n        if (resource === 'categories') {\n            // const url = `${apiUrl}/${resource}`;\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                sort: JSON.stringify([field, order]),\n                range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n                filter: JSON.stringify(params.filter),\n            };\n            console.log(query);\n            const url = `${apiUrl}/${resource}`;\n            return httpClient(url).then(({headers, json}) => ({\n                data: json,\n                total: 10,\n            }));\n        }\n\n        if(resource === 'webcams'){\n            let current_object = webcamFakeData;\n            if(isEmpty(params.filter)){\n            }else{\n                let filter_name = params.filter.name;\n                let filter_lid = params.filter.lid;\n                let filter_source = params.filter.source;\n                if(filter_name !== undefined){\n                    current_object = current_object.filter(items => items.name.toLowerCase().indexOf(filter_name.toLowerCase()) !== -1)\n                }\n                if(filter_lid !== undefined){\n                    current_object = current_object.filter(items => items.lid == parseInt(filter_lid))\n                }\n                if(filter_source !== undefined){\n                    current_object = current_object.filter(items => items.source.toLowerCase().indexOf(filter_source.toLowerCase()) !== -1)\n                }\n            }\n\n            const url = `${apiUrl}`;\n\n            return httpClient(url).then(({headers, json}) => ({\n                data: current_object,\n                total: current_object.length\n            }));\n        }\n\n        if(resource === 'housekeeping'){\n            let current_object = webcamFakeData;\n            if(isEmpty(params.filter)){\n            }else{\n                let filter_name = params.filter.name;\n                let filter_lid = params.filter.lid;\n                let filter_source = params.filter.source;\n                let filter_status = params.filter.status;\n                if(filter_name !== undefined){\n                    current_object = current_object.filter(items => items.name.toLowerCase().indexOf(filter_name.toLowerCase()) !== -1)\n                }\n                if(filter_lid !== undefined){\n                    current_object = current_object.filter(items => items.lid == parseInt(filter_lid))\n                }\n                if(filter_source !== undefined){\n                    current_object = current_object.filter(items => items.source.toLowerCase().indexOf(filter_source.toLowerCase()) !== -1)\n                }\n                if(filter_status !== undefined){\n                    current_object = current_object.filter(items => items.status.toLowerCase().indexOf(filter_status.toLowerCase()) !== -1)\n                }\n            }\n\n            const url = `${apiUrl}`;\n            return httpClient(url).then(({headers, json}) => ({\n                data: current_object,\n                total: current_object.length\n            }));\n        }\n\n        if(resource === 'reports'){\n            let current_object = webcamReportFakeData;\n            if(isEmpty(params.filter)){\n            }else{\n                let filter_uw = params.filter.url_webcam;\n                let filter_us = params.filter.url_site;\n                let filter_lid = params.filter.lid;\n                let filter_locality = params.filter.locality;\n                let filter_email = params.filter.email;\n                if(filter_uw !== undefined){\n                    current_object = current_object.filter(items => items.url_webcam.toLowerCase().indexOf(filter_uw.toLowerCase()) !== -1)\n                }\n                if(filter_us !== undefined){\n                    current_object = current_object.filter(items => items.url_site.toLowerCase().indexOf(filter_us.toLowerCase()) !== -1)\n                }\n                if(filter_lid !== undefined){\n                    current_object = current_object.filter(items => items.lid == parseInt(filter_lid))\n                }\n                if(filter_locality !== undefined){\n                    current_object = current_object.filter(items => items.locality.toLowerCase().indexOf(filter_locality.toLowerCase()) !== -1)\n                }\n                if(filter_email !== undefined){\n                    current_object = current_object.filter(items => items.email.toLowerCase().indexOf(filter_email.toLowerCase()) !== -1)\n                }\n            }\n\n            const url = `${apiUrl}`;\n            return httpClient(url).then(({headers, json}) => ({\n                data: current_object,\n                total: current_object.length\n            }));\n        }\n    },\n    create: (resource, params) => {\n        if(resource === 'webcams') {\n            params.id = 150;\n            webcamFakeData.includes(params);\n            const url = `${apiUrl}`;\n            return httpClient(url).then(({headers, json}) => ({\n                data: webcamFakeData,\n                id: 150\n            }));\n        }\n    },\n    getOne: (resource, params) => {\n        if(resource === 'webcams' || resource === 'housekeeping') {\n            const url = `${apiUrl}`;\n            return httpClient(url).then(({headers, json}) => ({\n                data: webcamFakeData.filter(id => params.id),\n            }));\n        }\n    }\n}","import React from 'react';\n// import { Admin } from 'react-admin';\nimport { Admin, Resource, Login} from 'react-admin';\nimport { PostList, PostEdit, PostCreate } from './page/posts/posts.component';\nimport { WebcamList, WebcamEdit, WebcamCreate } from './page/webcams/webcams.component';\nimport { WebcamReportsList } from './page/webcam-reports/webcam-reports.component';\nimport { HousekeepingList, HousekeepingEdit } from './page/housekeeping/housekeeping.component';\nimport { CommentList } from './page/comment/comment.component';\nimport { UserList } from './page/users/users.component';\nimport { Dashboard } from './page/dashboard/dashboard.component';\n\nimport authProvider from './provider/auth-provider/auth-provider.component';\nimport jsonServerProvider from 'ra-data-json-server';\n\nimport PostIcon from '@material-ui/icons/Book';\nimport WebcamIcon from '@material-ui/icons/LinkedCamera';\nimport HousekeepingIcon from '@material-ui/icons/BrokenImage';\nimport WebcamReportsIcon from '@material-ui/icons/RecordVoiceOver';\nimport UserIcon from '@material-ui/icons/Group';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport './custom.styels.scss'\n// import bg from '../public/images/bg.jpg';\n// const dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\n\nimport dataProvider from './provider/data-provider/data-provider.component';\n\nconst MyLoginPage = () => (\n    <Login\n        // A random image that changes everyday\n        backgroundImage=\"/images/bg.jpg\"\n    />\n);\n\n\n// const App = () => <Admin dataProvider={dataProvider} />;\nconst App = () => (\n    <Admin loginPage={MyLoginPage} authProvider={authProvider} dataProvider={dataProvider}>\n      <Resource icon={WebcamIcon} name=\"webcams\" list={WebcamList} edit={WebcamEdit} create={WebcamCreate}/>\n      <Resource icon={HousekeepingIcon} options={{label: 'Housekeeping'}} name=\"housekeeping\" list={HousekeepingList} edit={HousekeepingEdit}/>\n      <Resource icon={WebcamReportsIcon} options={{label: 'Webcam Reports', title: 'Webcam Reports'}} name=\"reports\" list={WebcamReportsList}/>\n    </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}